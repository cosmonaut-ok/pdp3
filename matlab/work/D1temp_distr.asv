%--------------Temperature distribution T(x,t) for 1D model----------------
disp ('start');
disp ('Im alive!!');
%------------------file opening-----------
src_id=fopen('D:\Dasha\caverna_new\Levitskij\Temperatura\odnor_bez_mod_2_ni=ne_s1.txt','r');
dst_id=fopen('D:\Dasha\caverna_new\Levitskij\Temperatura\Tnm.txt','w');
% %------------initialize-------------------
V_gridx=800; V_gridt=400;
xmin=0; xmax=6;
dx=(xmax-xmin)/V_gridx;
position=xmin:dx:xmax;
% %------------initial distributions--------
% ------T is temperature distr, K - the quantity of particles in cell------
%for m=1:V_gridx, for n=1:V_gridt, T(m,n)=0; end; end;
%for m=1:V_gridx, for n=1:V_gridt, K(m,n)=0; end; end;%at least one particle in cell
% %-----------------------------------------
% %-----------!!!the main part!!!!!---------
% %-----------------------------------------
n=0;
k=1;
while feof(src_id)<1,
    str=fgetl(src_id);
    n=n+1;
    if(mod(n,100) ~= 1),
        continue;
    end;
    disp(n);
    [q,N]=sscanf(str,'%e');
    time(n)=q(1);
    %for i=3:2:N,
    %    V((i-1)/2)=q(i); end;
    %for i=2:2:(N-1),
    %    X(i/2)=q(i); end;
    p = 1;
    for i=2:2:N-1,
        X(p) = q(i);
        V(p) = q(i+1);
        p = p + 1;
        if(mod(p,100) == 0), disp(p); end;
    end;
    disp('dupa');
    for j=1:((N-1)/2),
        for m=1:V_gridx,
            K(m,k) = 0;
            T(m,k) = 0;
            if((X(j)>=position(m))&&(X(j)<position(m+1))),
                 K(m,k)=(K(m,k)+1);
                 T(m,k)=(T(m,k)+((V(j)*V(j)*0.5*9.11*10^-31)/K(m,k)));
            end;
        end;
    end;
    k=k+1;
end;
% %-----------------------------SURF-----------------------------------------
surf(T);
% %------------------------------data writing--------------------------------
fprintf(dst_id,'0 ');
for m=1:V_gridx, fprintf(dst_id,'%e ',position(m));end;
fprintf(dst_id,'\n');
       
for n=1:V_gridt, 
    fprintf(dst_id,'%e ',time(n));
    for m=1:V_gridx, fprintf(dst_id,'%e ',T(m,n));end; 
    fprintf(dst_id,'\n');
end;

% %------------------------cleaning of the variables-------------------------
 %clear T time position X V N K q str;
 disp ('Done!');
fclose(dst_id); 
fclose(src_id);               
disp ('done')